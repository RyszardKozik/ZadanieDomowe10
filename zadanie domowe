from collections import UserDict

class Field:
    def __init__(self,value = None):
        self.value = value

class Name(Field):
    pass

class Phone(Field):
    pass

class Record:
    def __init__(self, name):
        self.name = Name(name)
        self.phones = []

    def add_phone(self, phone):
        self.phones.append(Phone(phone))

    def remove_phone(self, phone):
        self.phones = [p for p in self.phones if p.value != phone]
        
    def edit_phone(self, old_phone, new_phone):
        for phone in self.phones:
            if phone.value == old_phone:
                phone.value = new_phone

class AddressBook(UserDict):
    def add_record(self, record):
        self.data[record.name.value] = record

        def search_records(self, criteria):
            matching_records = []
            for record in self.data.values():
                if all(
                    getattr(record, field, None) == value
                    if field != "phones"
                    else any(phones.value == value for phones in getattr(record, field))
                    for field, value in criteria.items()
                ):
            
                    matching_records.append(record)
            return matching_records
        
